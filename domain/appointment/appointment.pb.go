//  Defines the syntax for the protocol buffer code

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.23.3
// source: domain/appointment/proto/appointment.proto

//  Declares the package in use. This prevents naming conflict between different projects

package appointment

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// [Response] Get appointment list
type AppointmentListProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appointments []*AppointmentProto `protobuf:"bytes,1,rep,name=appointments,proto3" json:"appointments,omitempty"`
}

func (x *AppointmentListProto) Reset() {
	*x = AppointmentListProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_appointment_proto_appointment_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppointmentListProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppointmentListProto) ProtoMessage() {}

func (x *AppointmentListProto) ProtoReflect() protoreflect.Message {
	mi := &file_domain_appointment_proto_appointment_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppointmentListProto.ProtoReflect.Descriptor instead.
func (*AppointmentListProto) Descriptor() ([]byte, []int) {
	return file_domain_appointment_proto_appointment_proto_rawDescGZIP(), []int{0}
}

func (x *AppointmentListProto) GetAppointments() []*AppointmentProto {
	if x != nil {
		return x.Appointments
	}
	return nil
}

// [Response] Get appointment
type AppointmentProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HealthcareId    string                 `protobuf:"bytes,1,opt,name=healthcare_id,json=healthcareId,proto3" json:"healthcare_id,omitempty"`
	AppointmentNo   string                 `protobuf:"bytes,2,opt,name=appointment_no,json=appointmentNo,proto3" json:"appointment_no,omitempty"`
	ParamedicId     string                 `protobuf:"bytes,3,opt,name=paramedic_id,json=paramedicId,proto3" json:"paramedic_id,omitempty"`
	PatientId       string                 `protobuf:"bytes,4,opt,name=patient_id,json=patientId,proto3" json:"patient_id,omitempty"`
	AppointmentDate *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=appointment_date,json=appointmentDate,proto3" json:"appointment_date,omitempty"`
	AppointmentTime *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=appointment_time,json=appointmentTime,proto3" json:"appointment_time,omitempty"`
	IsVoid          bool                   `protobuf:"varint,7,opt,name=is_void,json=isVoid,proto3" json:"is_void,omitempty"`
	UserCreate      string                 `protobuf:"bytes,8,opt,name=user_create,json=userCreate,proto3" json:"user_create,omitempty"`
	CreateAt        *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"`
	ScheduleSlotId  int64                  `protobuf:"varint,10,opt,name=schedule_slot_id,json=scheduleSlotId,proto3" json:"schedule_slot_id,omitempty"`
}

func (x *AppointmentProto) Reset() {
	*x = AppointmentProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_appointment_proto_appointment_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppointmentProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppointmentProto) ProtoMessage() {}

func (x *AppointmentProto) ProtoReflect() protoreflect.Message {
	mi := &file_domain_appointment_proto_appointment_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppointmentProto.ProtoReflect.Descriptor instead.
func (*AppointmentProto) Descriptor() ([]byte, []int) {
	return file_domain_appointment_proto_appointment_proto_rawDescGZIP(), []int{1}
}

func (x *AppointmentProto) GetHealthcareId() string {
	if x != nil {
		return x.HealthcareId
	}
	return ""
}

func (x *AppointmentProto) GetAppointmentNo() string {
	if x != nil {
		return x.AppointmentNo
	}
	return ""
}

func (x *AppointmentProto) GetParamedicId() string {
	if x != nil {
		return x.ParamedicId
	}
	return ""
}

func (x *AppointmentProto) GetPatientId() string {
	if x != nil {
		return x.PatientId
	}
	return ""
}

func (x *AppointmentProto) GetAppointmentDate() *timestamppb.Timestamp {
	if x != nil {
		return x.AppointmentDate
	}
	return nil
}

func (x *AppointmentProto) GetAppointmentTime() *timestamppb.Timestamp {
	if x != nil {
		return x.AppointmentTime
	}
	return nil
}

func (x *AppointmentProto) GetIsVoid() bool {
	if x != nil {
		return x.IsVoid
	}
	return false
}

func (x *AppointmentProto) GetUserCreate() string {
	if x != nil {
		return x.UserCreate
	}
	return ""
}

func (x *AppointmentProto) GetCreateAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateAt
	}
	return nil
}

func (x *AppointmentProto) GetScheduleSlotId() int64 {
	if x != nil {
		return x.ScheduleSlotId
	}
	return 0
}

// Get appointment based on Healthcare ID and Appointment No
type AppointmentGetProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HealthcareId  string `protobuf:"bytes,1,opt,name=healthcare_id,json=healthcareId,proto3" json:"healthcare_id,omitempty"`
	AppointmentNo string `protobuf:"bytes,2,opt,name=appointment_no,json=appointmentNo,proto3" json:"appointment_no,omitempty"`
}

func (x *AppointmentGetProto) Reset() {
	*x = AppointmentGetProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_appointment_proto_appointment_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppointmentGetProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppointmentGetProto) ProtoMessage() {}

func (x *AppointmentGetProto) ProtoReflect() protoreflect.Message {
	mi := &file_domain_appointment_proto_appointment_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppointmentGetProto.ProtoReflect.Descriptor instead.
func (*AppointmentGetProto) Descriptor() ([]byte, []int) {
	return file_domain_appointment_proto_appointment_proto_rawDescGZIP(), []int{2}
}

func (x *AppointmentGetProto) GetHealthcareId() string {
	if x != nil {
		return x.HealthcareId
	}
	return ""
}

func (x *AppointmentGetProto) GetAppointmentNo() string {
	if x != nil {
		return x.AppointmentNo
	}
	return ""
}

// Add appointment
type AppointmentAddProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addappointment *AppointmentProto `protobuf:"bytes,1,opt,name=addappointment,proto3" json:"addappointment,omitempty"`
}

func (x *AppointmentAddProto) Reset() {
	*x = AppointmentAddProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_appointment_proto_appointment_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppointmentAddProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppointmentAddProto) ProtoMessage() {}

func (x *AppointmentAddProto) ProtoReflect() protoreflect.Message {
	mi := &file_domain_appointment_proto_appointment_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppointmentAddProto.ProtoReflect.Descriptor instead.
func (*AppointmentAddProto) Descriptor() ([]byte, []int) {
	return file_domain_appointment_proto_appointment_proto_rawDescGZIP(), []int{3}
}

func (x *AppointmentAddProto) GetAddappointment() *AppointmentProto {
	if x != nil {
		return x.Addappointment
	}
	return nil
}

// Update appointment
type AppointmentUpdateProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Updateappointment *AppointmentProto `protobuf:"bytes,1,opt,name=updateappointment,proto3" json:"updateappointment,omitempty"`
}

func (x *AppointmentUpdateProto) Reset() {
	*x = AppointmentUpdateProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_appointment_proto_appointment_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppointmentUpdateProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppointmentUpdateProto) ProtoMessage() {}

func (x *AppointmentUpdateProto) ProtoReflect() protoreflect.Message {
	mi := &file_domain_appointment_proto_appointment_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppointmentUpdateProto.ProtoReflect.Descriptor instead.
func (*AppointmentUpdateProto) Descriptor() ([]byte, []int) {
	return file_domain_appointment_proto_appointment_proto_rawDescGZIP(), []int{4}
}

func (x *AppointmentUpdateProto) GetUpdateappointment() *AppointmentProto {
	if x != nil {
		return x.Updateappointment
	}
	return nil
}

// Delete appointment
type AppointmentDeleteProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Deleteappointment *AppointmentProto `protobuf:"bytes,1,opt,name=deleteappointment,proto3" json:"deleteappointment,omitempty"`
}

func (x *AppointmentDeleteProto) Reset() {
	*x = AppointmentDeleteProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_appointment_proto_appointment_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppointmentDeleteProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppointmentDeleteProto) ProtoMessage() {}

func (x *AppointmentDeleteProto) ProtoReflect() protoreflect.Message {
	mi := &file_domain_appointment_proto_appointment_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppointmentDeleteProto.ProtoReflect.Descriptor instead.
func (*AppointmentDeleteProto) Descriptor() ([]byte, []int) {
	return file_domain_appointment_proto_appointment_proto_rawDescGZIP(), []int{5}
}

func (x *AppointmentDeleteProto) GetDeleteappointment() *AppointmentProto {
	if x != nil {
		return x.Deleteappointment
	}
	return nil
}

// [Response] Delete appointment
type AppointmentDeleteResponseProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HealthcareId  string `protobuf:"bytes,1,opt,name=healthcare_id,json=healthcareId,proto3" json:"healthcare_id,omitempty"`
	AppointmentNo string `protobuf:"bytes,2,opt,name=appointment_no,json=appointmentNo,proto3" json:"appointment_no,omitempty"`
}

func (x *AppointmentDeleteResponseProto) Reset() {
	*x = AppointmentDeleteResponseProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_appointment_proto_appointment_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppointmentDeleteResponseProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppointmentDeleteResponseProto) ProtoMessage() {}

func (x *AppointmentDeleteResponseProto) ProtoReflect() protoreflect.Message {
	mi := &file_domain_appointment_proto_appointment_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppointmentDeleteResponseProto.ProtoReflect.Descriptor instead.
func (*AppointmentDeleteResponseProto) Descriptor() ([]byte, []int) {
	return file_domain_appointment_proto_appointment_proto_rawDescGZIP(), []int{6}
}

func (x *AppointmentDeleteResponseProto) GetHealthcareId() string {
	if x != nil {
		return x.HealthcareId
	}
	return ""
}

func (x *AppointmentDeleteResponseProto) GetAppointmentNo() string {
	if x != nil {
		return x.AppointmentNo
	}
	return ""
}

var File_domain_appointment_proto_appointment_proto protoreflect.FileDescriptor

var file_domain_appointment_proto_appointment_proto_rawDesc = []byte{
	0x0a, 0x2a, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2f, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x70, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x61, 0x70,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x59, 0x0a, 0x14, 0x41, 0x70, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x41, 0x0a, 0x0c, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0c, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x22, 0xcb, 0x03, 0x0a, 0x10, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x23, 0x0a, 0x0d, 0x68, 0x65, 0x61, 0x6c, 0x74,
	0x68, 0x63, 0x61, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x63, 0x61, 0x72, 0x65, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e,
	0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x6f, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x4e, 0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x64, 0x69, 0x63,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x64, 0x69, 0x63, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x74, 0x69,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x45, 0x0a, 0x10, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0f, 0x61, 0x70, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x45, 0x0a, 0x10,
	0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x0f, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x76, 0x6f, 0x69, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x56, 0x6f, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x37, 0x0a,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x49, 0x64,
	0x22, 0x61, 0x0a, 0x13, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x47,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x23, 0x0a, 0x0d, 0x68, 0x65, 0x61, 0x6c, 0x74,
	0x68, 0x63, 0x61, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x63, 0x61, 0x72, 0x65, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e,
	0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x6f, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x4e, 0x6f, 0x22, 0x5c, 0x0a, 0x13, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x45, 0x0a, 0x0e, 0x61, 0x64,
	0x64, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x52, 0x0e, 0x61, 0x64, 0x64, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x22, 0x65, 0x0a, 0x16, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x4b, 0x0a, 0x11, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x11, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x61, 0x70, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x65, 0x0a, 0x16, 0x41, 0x70, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x4b, 0x0a, 0x11, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x61, 0x70, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x70, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x11, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x22,
	0x6c, 0x0a, 0x1e, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x23, 0x0a, 0x0d, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x63, 0x61, 0x72, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68,
	0x63, 0x61, 0x72, 0x65, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x32, 0xee, 0x03,
	0x0a, 0x12, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x43, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x21, 0x2e, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x0b, 0x4c, 0x69, 0x73,
	0x74, 0x42, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x1d, 0x2e, 0x61, 0x70, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x2e, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x03,
	0x47, 0x65, 0x74, 0x12, 0x20, 0x2e, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x74,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x2e, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x03, 0x41, 0x64, 0x64, 0x12, 0x20, 0x2e,
	0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x70, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1d, 0x2e, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x70,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x00,
	0x12, 0x4e, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x23, 0x2e, 0x61, 0x70, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1d, 0x2e, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x70,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x00,
	0x12, 0x5c, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x23, 0x2e, 0x61, 0x70, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x2b, 0x2e, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x70,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x00, 0x42, 0x16,
	0x5a, 0x14, 0x2e, 0x2f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2f, 0x61, 0x70, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_domain_appointment_proto_appointment_proto_rawDescOnce sync.Once
	file_domain_appointment_proto_appointment_proto_rawDescData = file_domain_appointment_proto_appointment_proto_rawDesc
)

func file_domain_appointment_proto_appointment_proto_rawDescGZIP() []byte {
	file_domain_appointment_proto_appointment_proto_rawDescOnce.Do(func() {
		file_domain_appointment_proto_appointment_proto_rawDescData = protoimpl.X.CompressGZIP(file_domain_appointment_proto_appointment_proto_rawDescData)
	})
	return file_domain_appointment_proto_appointment_proto_rawDescData
}

var file_domain_appointment_proto_appointment_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_domain_appointment_proto_appointment_proto_goTypes = []interface{}{
	(*AppointmentListProto)(nil),           // 0: appointment.AppointmentListProto
	(*AppointmentProto)(nil),               // 1: appointment.AppointmentProto
	(*AppointmentGetProto)(nil),            // 2: appointment.AppointmentGetProto
	(*AppointmentAddProto)(nil),            // 3: appointment.AppointmentAddProto
	(*AppointmentUpdateProto)(nil),         // 4: appointment.AppointmentUpdateProto
	(*AppointmentDeleteProto)(nil),         // 5: appointment.AppointmentDeleteProto
	(*AppointmentDeleteResponseProto)(nil), // 6: appointment.AppointmentDeleteResponseProto
	(*timestamppb.Timestamp)(nil),          // 7: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),                  // 8: google.protobuf.Empty
}
var file_domain_appointment_proto_appointment_proto_depIdxs = []int32{
	1,  // 0: appointment.AppointmentListProto.appointments:type_name -> appointment.AppointmentProto
	7,  // 1: appointment.AppointmentProto.appointment_date:type_name -> google.protobuf.Timestamp
	7,  // 2: appointment.AppointmentProto.appointment_time:type_name -> google.protobuf.Timestamp
	7,  // 3: appointment.AppointmentProto.create_at:type_name -> google.protobuf.Timestamp
	1,  // 4: appointment.AppointmentAddProto.addappointment:type_name -> appointment.AppointmentProto
	1,  // 5: appointment.AppointmentUpdateProto.updateappointment:type_name -> appointment.AppointmentProto
	1,  // 6: appointment.AppointmentDeleteProto.deleteappointment:type_name -> appointment.AppointmentProto
	8,  // 7: appointment.AppointmentService.List:input_type -> google.protobuf.Empty
	1,  // 8: appointment.AppointmentService.ListByParam:input_type -> appointment.AppointmentProto
	2,  // 9: appointment.AppointmentService.Get:input_type -> appointment.AppointmentGetProto
	3,  // 10: appointment.AppointmentService.Add:input_type -> appointment.AppointmentAddProto
	4,  // 11: appointment.AppointmentService.Update:input_type -> appointment.AppointmentUpdateProto
	5,  // 12: appointment.AppointmentService.Delete:input_type -> appointment.AppointmentDeleteProto
	0,  // 13: appointment.AppointmentService.List:output_type -> appointment.AppointmentListProto
	0,  // 14: appointment.AppointmentService.ListByParam:output_type -> appointment.AppointmentListProto
	1,  // 15: appointment.AppointmentService.Get:output_type -> appointment.AppointmentProto
	1,  // 16: appointment.AppointmentService.Add:output_type -> appointment.AppointmentProto
	1,  // 17: appointment.AppointmentService.Update:output_type -> appointment.AppointmentProto
	6,  // 18: appointment.AppointmentService.Delete:output_type -> appointment.AppointmentDeleteResponseProto
	13, // [13:19] is the sub-list for method output_type
	7,  // [7:13] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_domain_appointment_proto_appointment_proto_init() }
func file_domain_appointment_proto_appointment_proto_init() {
	if File_domain_appointment_proto_appointment_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_domain_appointment_proto_appointment_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppointmentListProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_appointment_proto_appointment_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppointmentProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_appointment_proto_appointment_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppointmentGetProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_appointment_proto_appointment_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppointmentAddProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_appointment_proto_appointment_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppointmentUpdateProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_appointment_proto_appointment_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppointmentDeleteProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_appointment_proto_appointment_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppointmentDeleteResponseProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_domain_appointment_proto_appointment_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_domain_appointment_proto_appointment_proto_goTypes,
		DependencyIndexes: file_domain_appointment_proto_appointment_proto_depIdxs,
		MessageInfos:      file_domain_appointment_proto_appointment_proto_msgTypes,
	}.Build()
	File_domain_appointment_proto_appointment_proto = out.File
	file_domain_appointment_proto_appointment_proto_rawDesc = nil
	file_domain_appointment_proto_appointment_proto_goTypes = nil
	file_domain_appointment_proto_appointment_proto_depIdxs = nil
}
